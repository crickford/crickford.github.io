{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/PortfolioListing.js","webpack:///./src/pages/index.js","webpack:///./src/styles/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["React","createContext","PropTypes","object","string","isRequired","func","PortfolioListing","_2958795004","data","allMarkdownRemark","edges","map","_ref5","node","Object","core_browser_esm","key","id","css","_ref","_ref2","gatsby_link_default","a","to","fields","slug","es","translate","scale","opacity","flipId","_ref3","gatsby_image_default","fixed","frontmatter","mainimage","childImageSharp","title","subtitle","tags","length","_ref4","tag","index","stagger","defaultTag","__webpack_exports__","__webpack_require__","d","name","styles","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","propTypes","shape"],"mappings":"+MAY2BA,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,+TClDPC,EAAA,WA8Bb,OA7BaC,EAAAC,KA6BDC,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACtCC,OAAAC,EAAA,EAAAD,CAAA,WAASE,IAAKH,EAAKI,GAAIC,IAAGC,GASxBL,OAAAC,EAAA,EAAAD,CAAA,OAAKI,IAAGE,GAGNN,OAAAC,EAAA,EAAAD,CAACO,EAAAC,EAAD,CAAMC,GAAIV,EAAKW,OAAOC,MACpBX,OAAAC,EAAA,EAAAD,CAACY,EAAA,EAAD,CAASC,WAAW,EAAMC,OAAO,EAAMC,SAAS,EAAOC,OAAQjB,EAAKI,IAClEH,OAAAC,EAAA,EAAAD,CAAA,OAAKI,IAAGa,GACNjB,OAAAC,EAAA,EAAAD,CAACkB,EAAAV,EAAD,CAAOW,MAAOpB,EAAKqB,YAAYC,UAAUC,gBAAgBH,YAKjEnB,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAACO,EAAAC,EAAD,CAAMC,GAAIV,EAAKW,OAAOC,MACpBX,OAAAC,EAAA,EAAAD,CAACY,EAAA,EAAD,CAASC,WAAW,EAAMC,OAAO,EAAOC,SAAS,EAAOC,OAAM,QAAUjB,EAAKI,GAAf,UAC5DH,OAAAC,EAAA,EAAAD,CAAA,UAAKD,EAAKqB,YAAYG,SAG1BvB,OAAAC,EAAA,EAAAD,CAACY,EAAA,EAAD,CAASC,WAAW,EAAMC,OAAO,EAAOC,SAAS,EAAOC,OAAM,QAAUjB,EAAKI,GAAf,aAC5DH,OAAAC,EAAA,EAAAD,CAAA,UAAKD,EAAKqB,YAAYI,WAGtBzB,EAAKqB,YAAYK,KAAKC,QACtB1B,OAAAC,EAAA,EAAAD,CAAA,MAAII,IAAGuB,GACJ5B,EAAKqB,YAAYK,KAAK5B,IAAI,SAAC+B,EAAKC,GAAN,OACzB7B,OAAAC,EAAA,EAAAD,CAACY,EAAA,EAAD,CAASkB,QAAQ,OAAOd,OAAM,QAAUjB,EAAKI,GAAf,QAAyB0B,EAAS3B,IAAG,OAAS2B,GAC1E7B,OAAAC,EAAA,EAAAD,CAAA,MAAII,IAAK2B,KAAaH,YCrEvBI,EAAA,0BACbhC,OAAAC,EAAA,EAAAD,CAACR,EAAD,yCCJFyC,EAAAC,EAAAF,EAAA,sBAAAD,IAAAE,EAAA,OAEaF,EAAU,CAAAI,KAAA,SAAAC,OAAA,qKCFvB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oxVCMzCK,EAAmB,SAAArC,GAAkB,IAAfsC,EAAetC,EAAfsC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO9D,IAAM+D,cAAcC,IAApBjD,OAAAkD,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBU,UAAY,CAC3BT,SAAUxD,IAAUkE,MAAM,CACxBN,SAAU5D,IAAUE,OAAOC,aAC1BA,YAGUoD","file":"component---src-pages-index-js-182c22e73aa03fef28e9.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport Image from \"gatsby-image\"\nimport { defaultTag } from \"../styles/index\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport { Flipped } from \"react-flip-toolkit\"\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___enddate], order: DESC }) {\n        edges {\n          node {\n            id,\n            fields {\n              slug\n            },\n            frontmatter {\n              title,\n              subtitle,\n              date,\n              tags,\n              mainimage {\n                childImageSharp {\n                  fixed(width: 240) {\n                    ...GatsbyImageSharpFixed\n                  }\n                }\n              }\n            },\n            html\n          }\n        }\n      }\n    }\n  `)\n\n  return data.allMarkdownRemark.edges.map(({ node }) => (\n    <article key={node.id} css={css`\n      margin: 3rem 0;\n      display: flex;\n      align-items: center;\n      @media only screen and (max-width: 580px) {\n        flex-direction: column;\n        align-items: flex-start;\n      }\n    `}>\n      <div css={css`\n        margin-right: 1rem;\n      `}>\n        <Link to={node.fields.slug}>\n          <Flipped translate={true} scale={true} opacity={false} flipId={node.id}>\n            <div css={css`display: inline-block;`}>\n              <Image fixed={node.frontmatter.mainimage.childImageSharp.fixed}></Image>\n            </div>\n          </Flipped>\n        </Link>\n      </div>\n      <div>\n        <Link to={node.fields.slug}>\n          <Flipped translate={true} scale={false} opacity={false} flipId={`node-${node.id}-title`}>\n            <h1>{node.frontmatter.title}</h1>\n          </Flipped>\n        </Link>\n        <Flipped translate={true} scale={false} opacity={false} flipId={`node-${node.id}-subtitle`}>\n          <h3>{node.frontmatter.subtitle}</h3>\n        </Flipped>\n        {\n          node.frontmatter.tags.length &&\n          <ul css={css`list-style: none;`}>\n            {node.frontmatter.tags.map((tag, index) => (\n              <Flipped stagger=\"tags\" flipId={`node-${node.id}-tag-${index}`} key={`tag-${index}`}>\n                <li css={defaultTag}>{tag}</li>\n              </Flipped>\n            ))}\n          </ul>\n        }\n      </div>\n      \n    </article>\n  ))\n}","import React from \"react\"\nimport PortfolioListing from \"../components/PortfolioListing\"\n\nexport default () => (\n  <PortfolioListing></PortfolioListing>\n)\n","import { css } from \"@emotion/core\"\n\nexport const defaultTag = css`\n  display: inline-block;\n  background-color: #dbdbdb;\n  font-family: 'Open Sans', sans-serif;\n  color: #353535;\n  border-radius: 5px;\n  margin: 5px;\n  padding: 2px 8px;\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}